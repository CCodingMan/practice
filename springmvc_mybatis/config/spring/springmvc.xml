<?xml version="1.0" encoding="UTF-8"?>
<!--suppress XmlUnusedNamespaceDeclaration -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 组建扫描,不用一个一个配置bean，让spring自动扫描配置controller,service...开发建议中使用 -->
    <context:component-scan base-package="com.ljj.ssm.controller" />

    <!--
        使用mvc:annotation-driven代替注解映射器和适配器,使用用此标签就不需要配置下面的注解映射器和注解适配器：
        RequestMappingHandlerMapping和HttpRequestHandlerAdapter
        mvc:annotation-driven默认加载了很多参数绑定方法，如json转换解析等，实际开发中使用此注解
    -->
    <mvc:annotation-driven conversion-service="conversionService" validator="validator"/>

    <!-- 静态资源解析包括:js,css,img,... -->
    <!--<mvc:resources mapping="/js/**" location="/js/" />-->
    <!--<mvc:resources mapping="/img/**" location="/img/" />-->
    <!--<mvc:resources mapping="/css/**" location="/css/" />-->

    <!-- 自定义参数绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <list>
                <!-- 日期转换 -->
                <bean class="com.ljj.ssm.controller.converter.CustomDateConverter"/>
            </list>
        </property>
    </bean>

    <!-- 视图解析器,解析jsp,默认使用jstl标签 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- hibernate校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 指定校验器使用的资源文件，在文件中配置校验错误信息，不指定则默认为classpath下的ValidationMessage.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 资源文件名 -->
        <property name="basenames">
            <list>
                <value>customValidationMessages</value>
            </list>
        </property>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings" value="utf-8"/>
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120"/>
    </bean>

    <!-- 全局异常处理器 -->
    <bean class="com.ljj.ssm.exception.CustomExceptionResolver"></bean>

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器，顺序执行 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ljj.ssm.interceptor.LoginInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <!-- 拦截所有的url包括子url路径 -->
            <mvc:mapping path="/**"/>
            <bean class="com.ljj.ssm.interceptor.HandlerInterceptor1" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ljj.ssm.interceptor.HandlerInterceptor2" />
        </mvc:interceptor>
    </mvc:interceptors>

</beans>